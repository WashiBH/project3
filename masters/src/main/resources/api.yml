openapi: '3.0.0'

info:
  title: Masters
  description: Datos maestros para ser trabajados en cache con redis.
  version: 1.0.0

servers:
  - url: http://localhost:8586

tags:
  - name: customers-type

paths:
  /customerstype:
    post:
      tags:
        - customers-type
      summary: Add a new customer type to the database
      description: Add a new customer type to the database
      operationId: addCustomerType
      requestBody:
        description: Create a new customer type in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTypeDto'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTypeDto'
        "405":
          description: Invalid input
    get:
      tags:
        - customers-type
      summary: Find all customers type
      description: Returns all customers type
      operationId: getAllCustomerType
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTypeDto'
  /customerstype/{id}:
    put:
      tags:
        - customers-type
      summary: Update an existing customer type
      description: Update an existing customer type by Id
      operationId: updateCustomerType
      parameters:
        - name: id
          in: path
          description: ID of customer type to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent customer type in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTypeDto'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTypeDto'
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer type not found
        "405":
          description: Validation exception
    delete:
      tags:
        - customers-type
      summary: Delete a customer type
      description: delete a customer type
      operationId: deleteCustomerType
      parameters:
        - name: id
          in: path
          description: Customer type id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid customer type value
components:
  schemas:
    CustomerTypeDto:
      required:
        - type
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          description: Name customer type