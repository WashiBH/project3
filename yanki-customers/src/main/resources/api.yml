openapi: '3.0.0'

info:
  title: Yanki customers
  description: Clientes del monedero movil Yanki
  version: 1.0.0

servers:
  - url: http://localhost:8582

tags:
  - name: yankicustomers

paths:
  /yankicustomers:
    post:
      tags:
        - yankicustomers
      summary: Add a new yanki customer to the database
      description: Add a new yanki customer to the database
      operationId: addYankiCustomer
      requestBody:
        description: Create a new yanki customer in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiCustomerDto'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiCustomerDto'
        "405":
          description: Invalid input
  /yankicustomers/{id}:
    put:
      tags:
        - yankicustomers
      summary: Update an existing yanki customer
      description: Update an existing yanki customer by Id
      operationId: updateYankiCustomer
      parameters:
        - name: id
          in: path
          description: ID of yanki customer to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent yanki customer in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiCustomerDto'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiCustomerDto'
        "400":
          description: Invalid ID supplied
        "404":
          description: Yanki customer not found
        "405":
          description: Validation exception
    get:
      tags:
        - yankicustomers
      summary: Find yanki customer by ID
      description: Returns a single yanki customer
      operationId: getYankiCustomerById
      parameters:
        - name: id
          in: path
          description: ID of yanki customer to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiCustomerDto'
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer not found
    delete:
      tags:
        - yankicustomers
      summary: Delete a yanki customer
      description: delete a yanki customer
      operationId: deleteYankiCustomer
      parameters:
        - name: id
          in: path
          description: Yanki customer id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid yanki customer value
  /yankicustomers/document/{document}:
    get:
      tags:
        - yankicustomers
      summary: Find yanki customer by document number
      description: Returns a single customer
      operationId: getYankiCustomerByDocumentNumber
      parameters:
        - name: document
          in: path
          description: Document number of customer to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiCustomerDto'
        "400":
          description: Invalid document number supplied
        "404":
          description: Yanki customer not found
components:
  schemas:
    YankiCustomerDto:
      required:
        - documentType
        - documentNumber
        - names
        - surnames
        - email
        - phone
        - imei
      type: object
      properties:
        id:
          type: string
          readOnly: true
        documentType:
          type: string
          description: Document type
          enum:
            - DNI
            - CEX
            - PASAPORTE
        documentNumber:
          type: string
          description: Document number
          minLength: 8
          maxLength: 15
          pattern: '[0-9]{8,15}'
          example: "11111111"
        names:
          type: string
          description: Names
          example: Washington
        surnames:
          type: string
          description: Surnames
          example: Blas Huaman
        email:
          type: string
          description: email
          pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$'
          example: washington.blas.h@gmail.com
        phone:
          type: string
          description: phone
          pattern: '(\+51|51|)[0-9]+'
          example: "+51940000000"
        imei:
          type: string
          description: Phone IMEI
          minLength: 15
          maxLength: 15
          pattern: '[0-9]{15}'
          example: "111111110000000"
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2023-09-18T20:30:00Z"
          readOnly: true